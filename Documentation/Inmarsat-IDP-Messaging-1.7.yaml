---
openapi: 3.0.0
info:
  title: IDP Messaging API
  description: "The Messaging API is the means to communicate over the IsatData Pro (IDP) network with remote IoT devices in the field. IDP is a store-and-forward messaging system. The API v1 is based on polling a **Mailbox** using authentication credentials generated by a Distribution Partner using the **IDP Administrative API**. <br><br>The principal operations are:\n\n  * `get_return_messages` should be polled every 15-30 seconds;\n  * `submit_messages` is used when sending commands or data to the remote device;\n  * `get_forward_statuses` should be polled to track completion after submitting a message.\n\n<br><br>Authentication is effectively a modified *Basic Auth* with parameters:\n  \n  * `access_id` and `password` passed either in the request of `GET` operations; or\n  * `accessID` and `password` in the body of `POST` operations.\n\n*Note: Inmarsat's Messaging API is backward-compatible with SkyWave/ORBCOMM IGWS(1).*"
  version: "1.7"
servers:
- url: https://api.inmarsat.com/v1/idp/gateway/rest
  description: Production server
- url: https://api-sandbox.inmarsat.com/v1/sbox-idp/gateway/rest
  description: Static test server
tags:
- name: Information
  description: Provides generic service/API information. Unauthenticated.
- name: Messaging
  description: Retrieve or submit messages over-the-air to remote devices (aka **Mobile**s) via a private **Mailbox**. <br>**Return** messages may also be referred to as *Mobile-Originated* or *From-Mobile*. <br>**Forward** messages may also be referred to as *Mobile-Terminated* or *To-Mobile*. <br>Authentication is done using unique **Access ID** and **Password** associated with your **Mailbox**.
- name: Mobile
  description: Endpoints which return mobile information
paths:
  /info_utc_time.json/:
    get:
      tags:
      - Information
      summary: Get the current system time (UTC)
      description: This operation returns the Message Gateway System (MGS) time in modified UTC format.
      responses:
        "200":
          description: Success. Returns a UTC datetime.
          content:
            application/json:
              schema:
                type: string
                example: 2020-01-30 14:03:50
        "400":
          description: bad request
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
        "500":
          description: internal server error
        "503":
          description: service unavailable
  /info_errors.json/:
    get:
      tags:
      - Information
      summary: Get a list of supported error definitions
      description: Returns an array of errors definitions supported by the MGS. Inmarsat recommends calling this during client initialisation and periodically to maintain an up to date dictionary of all API error codes.
      responses:
        "200":
          description: Success.  List of error definitions.
          content:
            application/json:
              schema:
                type: array
                description: A list of error definitions.
                items:
                  $ref: '#/components/schemas/ErrorInfo'
        "400":
          description: bad request
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
        "500":
          description: internal server error
        "503":
          description: service unavailable
  /info_version.json/:
    get:
      tags:
      - Information
      summary: Get the current MGS software version
      description: Returns the version of the Message Gateway System (MGS) software.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: string
                example: 4.2.1.3
        "400":
          description: bad request
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
        "500":
          description: internal server error
        "503":
          description: service unavailable
  /get_return_messages.json/:
    get:
      tags:
      - Messaging
      summary: Retrieve Mobile-Originated messages
      description: 'Retrieves *Mobile-Originated* messages (up to 500) based on a *high water mark*  referencing either a start-time or previously retrieved unique message ID. <br>Inmarsat recommends using `start_utc` as the reference, mitigating temporary outage of the client or server. <br>Inmarsat retains messages for retrieval up to 5 days from transmission. <br>***Note**: calling this API does not generate satellite data charges.*'
      parameters:
      - name: access_id
        in: query
        description: The Mailbox Access ID credential
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: MB123
      - name: password
        in: query
        description: The Mailbox Password credential
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: generatedPassword
      - name: start_utc
        in: query
        description: 'Messages sent from this start time reference (UTC) or later will be retrieved. This may be up to 5 days in the past. <br>*Note: ignored if using `from_id` parameter.*'
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: 2017-01-01 00:00:00
      - name: end_utc
        in: query
        description: Optional. If specified and using `start_utc` messages up to this time will be retrieved.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: 2017-01-01 00:01:00
      - name: from_id
        in: query
        description: 'A unique ID of a previously retrieved message, typically derived from `NextStartID` parameter of a prior `get_return_messages` operation where More messages are available to retrieve. <br>If this field is specified, the MGS returns messages that arrived *after* this ID. <br>*Note: overrides `start_utc` parameter if used.*'
        required: false
        style: form
        explode: true
        schema:
          type: integer
        example: 1234567
      - name: mobile_id
        in: query
        description: Optional filter to retrieve only messages sent by this Mobile ID
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: 01234567SKYABCD
      - name: include_raw_payload
        in: query
        description: 'Optionally returns an array of bytes even if decoded payload is available. <br>*Note: `RawPayload` is returned automatically if no **Message Definition File** defines payload decoding for the Mailbox.*'
        required: false
        style: form
        explode: true
        schema:
          type: boolean
        example: true
      - name: include_type
        in: query
        description: Optionally includes *data type* when using a **Message Definition File** on the Mailbox. Example data types include `unsignedint`, `data`, etc.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
        example: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReturnMessagesResult'
              example:
                ErrorID: 0
                More: false
                NextStartUTC: 2021-02-03 20:06:11
                Messages:
                - ID: 1234567
                  MessageUTC: 2021-01-31 21:00:31
                  ReceiveUTC: 2021-01-31 21:00:31
                  SIN: 0
                  MobileID: 01234567SKYABCD
                  RawPayload:
                  - 0
                  - 0
                  - 2
                  - 0
                  - 3
                  - 5
                  - 7
                  - 0
                  - 5
                  - 6
                  - 84
                  - 0
                  - 0
                  - 0
                  - 1
                  Payload:
                    Name: modemRegistration
                    SIN: 0
                    MIN: 0
                    Fields:
                    - Name: hardwareMajorVersion
                      Value: "2"
                      Type: unsignedint
                    - Name: hardwareMinorVersion
                      Value: "0"
                      Type: unsignedint
                    - Name: softwareMajorVersion
                      Value: "3"
                      Type: unsignedint
                    - Name: softwareMinorVersion
                      Value: "5"
                      Type: unsignedint
                    - Name: product
                      Value: "7"
                      Type: unsignedint
                    - Name: wakeupPeriod
                      Value: None
                      Type: enum
                    - Name: lastResetReason
                      Value: LowVoltage
                      Type: enum
                    - Name: virtualCarrier
                      Value: "101"
                      Type: unsignedint
                    - Name: beam
                      Value: "4"
                      Type: unsignedint
                    - Name: vain
                      Value: "0"
                      Type: unsignedint
                    - Name: operatorTxState
                      Value: "0"
                      Type: unsignedint
                    - Name: userTxState
                      Value: "0"
                      Type: unsignedint
                    - Name: broadcastIDCount
                      Value: "1"
                      Type: unsignedint
                  RegionName: AMERRB16
                  OTAMessageSize: 15
                NextStartID: -1
        "400":
          description: bad request
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
        "500":
          description: internal server error
        "503":
          description: service unavailable
      security:
      - basicAuth: []
  /submit_messages.json/:
    post:
      tags:
      - Messaging
      summary: Send Mobile-Terminated message(s)
      description: |-
        Submits one or more *Mobile-Terminated* messages to the MGS to deliver. A maximum of 100 **ForwardMessage**s can be submitted with each call. The maximum size of each forward message is:

          * 10,000 bytes for modems *not* in low power mode (i.e. `wakeupPeriod` = `None`)
          * 5,000 bytes for modems with low power mode enabled.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitForwardMessages'
            example:
              accessID: MB123
              password: badPassword
              messages:
              - DestinationID: 01234567SKYABCD
                UserMessageID: 1
                RawPayload:
                - 0
                - 112
                - 0
                - 0
                Payload:
                  Name: pingModem
                  SIN: 0
                  MIN: 112
                  Fields: []
        required: true
        x-is-map: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmitForwardMessagesResult'
              example:
                SubmitForwardMessages_JResult:
                  ErrorID: 0
                  Submissions:
                  - ForwardMessageID: 6976753
                    DestinationID: 01234567SKYABCD
                    StateUTC: 2021-02-05 23:14:57
                    ErrorID: 0
                    UserMessageID: 42
                    ScheduledSendUTC: ""
                    TerminalWakeupPeriod: 0
                    OTAMessageSize: 4
        "400":
          description: bad request
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
        "500":
          description: internal server error
        "503":
          description: service unavailable
      security:
      - basicAuth: []
  /get_forward_statuses.json/:
    get:
      tags:
      - Messaging
      summary: Retrieve status of submitted Mobile-Terminated messages
      description: Retrieves delivery statuses of up to 100 *Mobile-Terminated* messages. You can query specific known message IDs or based on a datetime range.
      parameters:
      - name: access_id
        in: query
        description: The Mailbox Access ID credential
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: MB123
      - name: password
        in: query
        description: The Mailbox Password credential
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: generatedPassword
      - name: start_utc
        in: query
        description: 'If this parameter is present, provides delivery statuses of all Forward messages since the specified datetime, usually the time of the previous `IsClosed` *false* state returned. <br>*Note: Inmarsat recommends using this in most cases unless specific message states are in question.*'
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: 2020-01-01 00:00:00
      - name: end_utc
        in: query
        description: Optional end datetime window if using `start_utc`
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: 2020-01-02 00:00:00
      - name: fwIDs
        in: query
        description: List of comma separated `ForwardMessageID`s obtained from a recent `submit_messages` operation. If present this will filter on specific network-assigned IDs.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: "6976753"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetForwardStatusesResult'
              example:
                ErrorID: 0
                More: false
                NextStartUTC: 2021-02-05 23:20:21
                Statuses:
                - ForwardMessageID: 6976753
                  IsClosed: true
                  State: 3
                  ErrorID: 12309
                  StateUTC: 2021-02-05 23:20:21
                  ReferenceNumber: 1608
        "400":
          description: bad request
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
        "500":
          description: internal server error
        "503":
          description: service unavailable
      security:
      - basicAuth: []
  /get_forward_messages.json/:
    get:
      tags:
      - Messaging
      summary: Retrieve submitted forward messages
      description: Retrieves up to 100 Forward message records based on the specified list.
      parameters:
      - name: access_id
        in: query
        description: The Mailbox Access ID credential
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: MB123
      - name: password
        in: query
        description: The Mailbox Password credential
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: generatedPassword
      - name: fwIDs
        in: query
        description: List of comma separated `ForwardMessageID`s to be retrieved
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: "6976753"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetForwardMessagesResult'
              example:
                ErrorID: 0,
                Messages:
                - ID: 6976753
                  StatusUTC: 2021-02-05 23:20:21
                  CreateUTC: 2021-02-05 23:14:57
                  IsClosed: true
                  State: 3
                  DestinationID: 01174907SKYFDA4
                  ErrorID: 12309
                  RawPayload:
                  - 0
                  - 112
                  - 0
                  - 0
                  Payload:
                    Name: mobilePing
                    SIN: 0
                    MIN: 112
                    IsForward: "True"
                    Fields:
                    - Name: requestTime
                      Value: "0"
                  ReferenceNumber: 1608
        "400":
          description: bad request
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
        "500":
          description: internal server error
        "503":
          description: service unavailable
      security:
      - basicAuth: []
  /submit_cancelations.json/:
    get:
      tags:
      - Messaging
      summary: Cancel submitted Mobile-Terminated message(s)
      description: |-
        Attempts to cancel specified Forward messages. A cancelation will not succeed if the Forward message was already sent to the terminal. <br>An immediate success response does not mean that a Forward message has successfully been cancelled. It means that the MGS has successfully accepted the cancelation request. Success or failure of the cancelation request can be determined by its final status (by calling `get_forward_statuses`). For example, a Forward message is sent and is assigned a message ID of 2057799. To cancel the message you call `submit_cancelations` and pass it an ID of 2057799 through its `fwIDs` argument. In the immediate response you receive a new Forward message ID 2057812 which refers to the cancelation request. If you periodically poll `get_forward_statuses` you eventually receive a status for message 2057812. If the `State` is 1 (received) and ErrorID is 0,
         it means that the cancelation request has succeeded and
        that message 2057799 has been cancelled.
      parameters:
      - name: access_id
        in: query
        description: The Mailbox Access ID credential
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: MB123
      - name: password
        in: query
        description: The Mailbox Password credential
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: generatedPassword
      - name: fwIDs
        in: query
        description: List of `ForwardMessageID`s as comma separated values
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: "2057799"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmitMessagesResult'
        "400":
          description: bad request
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
        "500":
          description: internal server error
        "503":
          description: service unavailable
      security:
      - basicAuth: []
  /submit_messages_to_destinations.json/:
    post:
      tags:
      - Messaging
      summary: Submit 1 Mobile-Terminated message to multiple modems
      description: Submits a single *Mobile-Terminated* message to up to 100 destinations.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitForwardMessageToMultipleDestinations'
            example:
              accessID: MB123
              password: badPassword
              destinations: 01234567SKYABCD,01000056SKY1A95,01000056SKY1A95
              message:
                DestinationID: ""
                UserMessageID: 0
                RawPayload:
                - 0
                - 72
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmitMessagesResult'
        "400":
          description: bad request
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
        "500":
          description: internal server error
        "503":
          description: service unavailable
      security:
      - basicAuth: []
  /get_mobiles_paged.json/:
    get:
      tags:
      - Mobile
      summary: Get a list of modems assigned to the Mailbox
      description: Returns a list of metadata about the modems assigned to the Mailbox. `page_size` can be up to 1000 records. <br>Records are sorted by Mobile ID. The first call sets sinceMobile  parameter to an empty string, and all subsequent calls set it to the last MobileID of the previous call's result.
      parameters:
      - name: access_id
        in: query
        description: The Mailbox Access ID credential
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: MB123
      - name: password
        in: query
        description: The Mailbox Password credential
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: generatedPassword
      - name: since_mobile
        in: query
        description: Starting Mobile ID or empty string
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: 01234567SKYABCD
      - name: page_size
        in: query
        description: Page size up to 1000 entries
        required: true
        style: form
        explode: true
        schema:
          maximum: 1000
          minimum: 1
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMobilesPagedResult'
        "400":
          description: bad request
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
        "500":
          description: internal server error
        "503":
          description: service unavailable
      security:
      - basicAuth: []
  /get_broadcast_infos.json/:
    get:
      tags:
      - Mobile
      summary: Get a list of broadcast groups assigned to the Mailbox
      description: Returns a list of broadcast ID metadata.
      parameters:
      - name: access_id
        in: query
        description: The Mailbox Access ID credential
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: MB123
      - name: password
        in: query
        description: The Mailbox Password credential
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: generatedPassword
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBroadcastInfosResult'
        "400":
          description: bad request
        "401":
          description: unauthorized
        "403":
          description: forbidden
        "404":
          description: not found
        "500":
          description: internal server error
        "503":
          description: service unavailable
      security:
      - basicAuth: []
components:
  schemas:
    ErrorInfo:
      type: object
      properties:
        ID:
          type: integer
          description: Unique error ID
          example: 12309
        Name:
          type: string
          description: brief description of error
          example: ERR_NDN_TIMED_OUT
        Description:
          type: string
          description: longer description of error
          example: 'Non delivery notification reason: message time out'
    GetReturnMessagesResult:
      type: object
      properties:
        ErrorID:
          type: integer
          description: An error number for the API operation. (0 = NO_ERROR)
          example: 0
        More:
          type: boolean
          description: A flag indicating if more messages are available to retrieve in a subsequent `get_return_messages` call.
          example: false
        NextStartUTC:
          type: string
          description: The next start time high water mark for a subsequent `get_return_messages` call. An empty string indicates no more messages are pending.
          example: 2017-07-20 21:37:47
        NextStartID:
          type: integer
          description: The unique message ID high water mark for a subsequent `get_return_messages` call. A value -1 indicates no more messages are pending.
          example: 12345679
        Messages:
          type: array
          description: The list of retrieved messages.
          nullable: true
          items:
            $ref: '#/components/schemas/ReturnMessage'
      description: A class holding a response from a `get_return_messages` call.
    ReturnMessage:
      required:
      - ID
      - MessageUTC
      - MobileID
      - ReceiveUTC
      - RegionName
      - SIN
      type: object
      properties:
        ID:
          type: integer
          description: A unique ID assigned by the network.
          example: 940439
        MessageUTC:
          type: string
          description: The datetime (UTC) the message was made available in the Mailbox.
          example: 2011-06-29 03:01:17
        MobileID:
          type: string
          description: The unique Mobile ID that sent the message.
          example: 01000056SKY1A95
        ReceiveUTC:
          type: string
          description: The datetime (UTC) the message was received at the Satellite Access Station (aka Land Earth Station)
          example: 2011-06-29 03:01:06
        RegionName:
          type: string
          description: The system name of the satellite beam the message was received on.
          example: EMEARB17
        SIN:
          maximum: 255
          minimum: 0
          type: integer
          description: The Service Identification Number represented by the first payload byte.
          example: 0
        OTAMessageSize:
          maximum: 6400
          minimum: 2
          type: integer
          description: The size of the message (in bytes) sent over-the-air.
          example: 15
        Payload:
          $ref: '#/components/schemas/Payload'
        RawPayload:
          $ref: '#/components/schemas/RawPayload'
      description: A Mobile-Originated message including metadata.
    RawPayload:
      type: array
      description: An array of payload byte values in decimal format.
      items:
        maximum: 255
        minimum: 0
        type: integer
    Payload:
      required:
      - Fields
      - MIN
      - Name
      - SIN
      type: object
      properties:
        Name:
          type: string
          description: The name of the message, unique within the defined SIN.
          example: pingModem
        SIN:
          maximum: 255
          minimum: 0
          type: integer
          description: The Service Identification Number, also the first byte of raw payload. Used to define a set of related messages or remote operations. SIN is intended as a context encapsulating both Return and Forward messages defined in a **Message Definition File**. For example SIN=0 are reserved system messages for core modem operations.
        MIN:
          maximum: 255
          minimum: 0
          type: integer
          description: The Message Identification Number, also the second byte of raw payload. Used to define a message or remote operation within a SIN context. MIN are intended to represent a specific directional operation and are often paired as Forward request with Return response. For example SIN=0 MIN=72 *Forward* requests location and MIN=72 *Return* replies with location.
        IsForward:
          type: boolean
          description: Indicates if the message is Forward/Mobile-Terminated. Required if using `submit_messages` operation.
        Fields:
          type: array
          items:
            $ref: '#/components/schemas/Field'
      description: A decoded message payload derived from a **Message Definition File** provisioned on the Mailbox.
    Field:
      required:
      - Name
      type: object
      properties:
        Name:
          type: string
          description: The name of the field.
        Value:
          type: string
          description: The value (string) of the field, not present if `Type` is `array`
        Elements:
          type: array
          description: If `Type` is `array` this replaces `Value`.
          items:
            $ref: '#/components/schemas/Element'
        Type:
          type: string
          enum:
          - unsignedint
          - signedint
          - string
          - enum
          - boolean
          - data
          - array
          - message
      description: A decoded message data field derived from a **Message Definition File** provisioned on the Mailbox.
    SubmitForwardMessages:
      required:
      - accessID
      - messages
      - password
      type: object
      properties:
        accessID:
          type: string
          description: The Mailbox Access ID credential
          example: MB123
        password:
          type: string
          description: The Mailbox Password credential
          example: password
        messages:
          type: array
          description: The list of messages to be sent
          items:
            $ref: '#/components/schemas/ForwardMessage'
      description: The body of the POST operation for `submit_messages`
    ForwardMessage:
      required:
      - DestinationID
      type: object
      properties:
        DestinationID:
          type: string
          description: Unique Mobile ID or Broadcast ID to send the message to
          example: 01182083SKY88AC
        UserMessageID:
          type: integer
          description: Optional client-assigned message ID to correlate to network-assigned ID
          example: 1
        RawPayload:
          type: array
          description: An array of bytes in decimal format. Required if not using `Payload`.
          example:
          - 0
          - 112
          - 0
          - 0
          items:
            maximum: 255
            minimum: 0
            type: integer
        Payload:
          $ref: '#/components/schemas/Payload'
      description: A JSON object representing a Forward message and metadata
    SubmitForwardMessagesResult:
      required:
      - SubmitForwardMessages_JResult
      type: object
      properties:
        SubmitForwardMessages_JResult:
          $ref: '#/components/schemas/SubmitForwardMessagesResult_SubmitForwardMessages_JResult'
      description: Response to the `submit_messages` operation
    ForwardSubmission:
      required:
      - DestinationID
      - ErrorID
      properties:
        ErrorID:
          type: integer
          description: The error code associated with the message acceptance
          example: 0
        DestinationID:
          type: string
          description: The Mobile ID or the Broadcast ID the message was sent to
          example: 01082083SKY88AC
        ForwardMessageID:
          type: integer
          description: A unique ID of the Forward message assigned by the system. The client can use the `ForwardMessageID` to query the status of the message using `get_forward_statuses` or `get_forward_messages`.
          example: 8820
        StateUTC:
          type: string
          description: UTC based datetime of the submission/acceptance.
          example: 2016-06-10 13:16:30
        UserMessageID:
          type: integer
          description: Present if `UserMessageID` was passed in the `submit_messages` call. This number can be used by the client application to map its own message ID the system-generated `ForwardMessageID`.
          example: 1
        TerminalWakeupPeriod:
          multipleOf: 30
          maximum: 3600
          minimum: 0
          type: integer
          description: The modem's wake-up period in seconds if it is configured for low power mode, (`wakeupPeriod` is non-zero), or zero (0) if not configured for low power mode.
          example: 3600
        ScheduledSendUTC:
          type: string
          description: If the modem is not configured for low power mode, this will be an empty string. If the modem is configured with a `wakeupPeriod` nonzero this field contains the scheduled UTC transmission time.
          example: 2016-06-10 13:24:30
        OTAMessageSize:
          maximum: 10000
          minimum: 2
          type: integer
      description: Metadata relating to a submitted *Mobile-Terminated* message
    GetForwardStatusesResult:
      type: object
      properties:
        ErrorID:
          type: integer
          description: The error ID of the operation
          example: 0
        More:
          type: boolean
          description: True if more statuses remain on the MGS that match the given status filter.
          example: true
        NextStartUTC:
          type: string
          description: Datetime to use for the next `get_forward_statuses` operation  if `More` is true.
          example: 2021-02-05 22:20:21
        Statuses:
          type: array
          description: Array of ForwardStatus objects
          items:
            $ref: '#/components/schemas/ForwardStatus'
      description: Response to `get_forward_statuses` operation
    ForwardStatus:
      type: object
      properties:
        ForwardMessageID:
          type: string
          description: The system-generated ID for the Mobile-Terminated message submitted.
          example: "6976753"
        IsClosed:
          type: boolean
          description: True if the message was delivered or failed.
          example: true
        State:
          maximum: 8
          minimum: 0
          type: integer
          description: |-
            The latest state of the Forward message:

              * 0: submitted
              * 1: delivered
              * 2: message error
              * 3: failed delivery
              * 4: timed out
              * 5: cancelled
          example: 3
        ErrorID:
          type: integer
          description: The error ID associated with the message state
          example: 12309
        StateUTC:
          type: string
          description: The datetime (UTC) of the State of the message
          example: 2021-02-05 23:20:21
        ReferenceNumber:
          type: integer
          description: System-assigned reference number
          example: 1608
      description: Metadata relating to the Forward message submission.
    GetForwardMessagesResult:
      type: object
      properties:
        ErrorID:
          type: integer
          description: The error ID of the operation
          example: 0
        Messages:
          type: array
          description: List of retrieved Forward messages
          items:
            $ref: '#/components/schemas/ForwardMessageRecord'
      description: Response to `get_forward_messages` operation
    ForwardMessageRecord:
      type: object
      properties:
        ID:
          type: integer
          description: System-assigned `ForwardMessageID`.
          example: 6976753
        StatusUTC:
          type: string
          description: UTC based datetime of the message status.
          example: 2016-06-10 08:22:30
        CreateUTC:
          type: string
          description: Time the message was accepted by the MGS.
          example: 2021-02-05 23:14:57
        IsClosed:
          type: boolean
          description: True if the message was delivered or failed
          example: true
        State:
          maximum: 8
          minimum: 0
          type: integer
          description: The latest state of the message.
          example: 3
        DestinationID:
          type: string
          description: The mobile ID or broadcast ID the message was sent to
          example: 01082062SKYB443
        ErrorID:
          type: integer
          description: The error ID associated with the message state
          example: 12309
        RawPayload:
          $ref: '#/components/schemas/RawPayload'
        Payload:
          $ref: '#/components/schemas/Payload'
        ReferenceNumber:
          type: integer
          description: System-assigned reference number
          example: 1608
      description: Forward message data and metadata
    SubmitForwardMessageToMultipleDestinations:
      required:
      - accessID
      - destinations
      - message
      - password
      type: object
      properties:
        accessID:
          type: string
          description: The Mailbox Access ID credential
          example: MB123
        password:
          type: string
          description: The Mailbox Password credential
          example: badPassword
        destinations:
          type: string
          description: A comma-separated list of Mobile IDs
          example: 01182083SKY88AC, 01000056SKY1A95
        message:
          $ref: '#/components/schemas/ForwardMessage'
      description: Request body for submitting a message to multiple modems
    SubmitMessagesResult:
      type: object
      properties:
        ErrorID:
          type: integer
          description: Error ID of the submission batch
          example: 0
        Submissions:
          type: array
          description: An array of `ForwardSubmission` objects.
          items:
            $ref: '#/components/schemas/ForwardSubmission'
      description: Response to `submit_cancelations` or `submit_messages_to_destinations`
    GetMobilesPagedResult:
      type: object
      properties:
        Mobiles:
          type: array
          items:
            $ref: '#/components/schemas/MobileInfo'
      description: A JSON object containing a list of modem metadata
    MobileInfo:
      type: object
      properties:
        ID:
          type: string
          description: The unique Mobile ID
          example: 01000051SKY867C
        Description:
          type: string
          description: An optional user description
          example: Truck1
        LastRegistrationUTC:
          type: string
          description: The datetime of the most recent modem registration
          example: 2012-09-13 20:55:35
        RegionName:
          type: string
          description: The satellite beam used for the most recent registration
          example: AMERRB16
      description: Mobile/modem metadata
    GetBroadcastInfosResult:
      properties:
        ErrorID:
          type: integer
          description: Error ID of the operation
          example: 0
        BroadcastInfos:
          type: array
          description: List of broadcast group metadata
          items:
            $ref: '#/components/schemas/BroadcastInfo'
      description: Broadcast group metadata
    BroadcastInfo:
      type: object
      properties:
        ID:
          type: string
          description: The unique Broadcast ID
          example: 16777190GRP85BB
        Description:
          type: string
          description: A user-defined name for the group
          example: Group2
      description: Broadcast group metadata
    Element:
      title: Element
      type: object
      properties:
        Index:
          type: integer
          description: The index of the Elements array.
        Fields:
          type: array
          description: An array of data fields within the Element.
          items:
            $ref: '#/components/schemas/Field'
    SubmitForwardMessagesResult_SubmitForwardMessages_JResult:
      required:
      - ErrorID
      - Submissions
      type: object
      properties:
        ErrorID:
          type: integer
          description: The ID of the error of the submit operation
          example: 0
        Submissions:
          type: array
          items:
            $ref: '#/components/schemas/ForwardSubmission'
  parameters:
    getAccessId:
      name: access_id
      in: query
      description: The Mailbox Access ID credential
      required: true
      style: form
      explode: true
      schema:
        type: string
      example: MB123
    getPassword:
      name: password
      in: query
      description: The Mailbox Password credential
      required: true
      style: form
      explode: true
      schema:
        type: string
      example: generatedPassword
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
